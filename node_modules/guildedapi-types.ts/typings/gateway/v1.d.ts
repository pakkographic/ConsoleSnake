import type * as OpenAPI from "../schemas/v1";
export declare const GatewayVersion = "1";
export declare const GatewayURL = "wss://www.guilded.gg/websocket/v1";
export declare const GatewayEvents: {
    readonly BotServerMembershipCreated: "BotServerMembershipCreated";
    readonly BotServerMembershipDeleted: "BotServerMembershipDeleted";
    readonly GroupCreated: "GroupCreated";
    readonly GroupUpdated: "GroupUpdated";
    readonly GroupDeleted: "GroupDeleted";
    readonly UserStatusCreated: "UserStatusCreated";
    readonly UserStatusDeleted: "UserStatusDeleted";
    readonly ChatMessageCreated: "ChatMessageCreated";
    readonly ChatMessageUpdated: "ChatMessageUpdated";
    readonly ChatMessageDeleted: "ChatMessageDeleted";
    readonly AnnouncementCreated: "AnnouncementCreated";
    readonly AnnouncementUpdated: "AnnouncementUpdated";
    readonly AnnouncementReactionCreated: "AnnouncementReactionCreated";
    readonly AnnouncementReactionDeleted: "AnnouncementReactionDeleted";
    readonly AnnouncementDeleted: "AnnouncementDeleted";
    readonly AnnouncementCommentCreated: "AnnouncementCommentCreated";
    readonly AnnouncementCommentUpdated: "AnnouncementCommentUpdated";
    readonly AnnouncementCommentDeleted: "AnnouncementCommentDeleted";
    readonly AnnouncementCommentReactionCreated: "AnnouncementCommentReactionCreated";
    readonly AnnouncementCommentReactionDeleted: "AnnouncementCommentReactionDeleted";
    readonly ChannelMessageReactionCreated: "ChannelMessageReactionCreated";
    readonly ChannelMessageReactionDeleted: "ChannelMessageReactionDeleted";
    readonly ChannelMessageReactionManyDeleted: "ChannelMessageReactionManyDeleted";
    readonly ChannelMessagePinned: "ChannelMessagePinned";
    readonly ChannelMessageUnpinned: "ChannelMessageUnpinned";
    readonly ServerChannelCreated: "ServerChannelCreated";
    readonly ServerChannelUpdated: "ServerChannelUpdated";
    readonly ServerChannelDeleted: "ServerChannelDeleted";
    readonly ChannelRolePermissionCreated: "ChannelRolePermissionCreated";
    readonly ChannelRolePermissionUpdated: "ChannelRolePermissionUpdated";
    readonly ChannelRolePermissionDeleted: "ChannelRolePermissionDeleted";
    readonly ChannelUserPermissionCreated: "ChannelUserPermissionCreated";
    readonly ChannelUserPermissionUpdated: "ChannelUserPermissionUpdated";
    readonly ChannelUserPermissionDeleted: "ChannelUserPermissionDeleted";
    readonly ChannelArchived: "ChannelArchived";
    readonly ChannelRestored: "ChannelRestored";
    readonly ChannelCategoryUserPermissionCreated: "ChannelCategoryUserPermissionCreated";
    readonly ChannelCategoryUserPermissionUpdated: "ChannelCategoryUserPermissionUpdated";
    readonly ChannelCategoryUserPermissionDeleted: "ChannelCategoryUserPermissionDeleted";
    readonly ChannelCategoryRolePermissionCreated: "ChannelCategoryRolePermissionCreated";
    readonly ChannelCategoryRolePermissionUpdated: "ChannelCategoryRolePermissionUpdated";
    readonly ChannelCategoryRolePermissionDeleted: "ChannelCategoryRolePermissionDeleted";
    readonly ForumTopicCreated: "ForumTopicCreated";
    readonly ForumTopicUpdated: "ForumTopicUpdated";
    readonly ForumTopicDeleted: "ForumTopicDeleted";
    readonly ForumTopicPinned: "ForumTopicPinned";
    readonly ForumTopicUnpinned: "ForumTopicUnpinned";
    readonly ForumTopicReactionCreated: "ForumTopicReactionCreated";
    readonly ForumTopicReactionDeleted: "ForumTopicReactionDeleted";
    readonly ForumTopicCommentCreated: "ForumTopicCommentCreated";
    readonly ForumTopicCommentUpdated: "ForumTopicCommentUpdated";
    readonly ForumTopicCommentDeleted: "ForumTopicCommentDeleted";
    readonly ForumTopicCommentReactionCreated: "ForumTopicCommentReactionCreated";
    readonly ForumTopicCommentReactionDeleted: "ForumTopicCommentReactionDeleted";
    readonly ForumTopicLocked: "ForumTopicLocked";
    readonly ForumTopicUnlocked: "ForumTopicUnlocked";
    readonly ServerMemberBanned: "ServerMemberBanned";
    readonly ServerMemberUnbanned: "ServerMemberUnbanned";
    readonly ServerMemberJoined: "ServerMemberJoined";
    readonly ServerMemberRemoved: "ServerMemberRemoved";
    readonly ServerMemberUpdated: "ServerMemberUpdated";
    readonly ServerRolesUpdated: "ServerRolesUpdated";
    readonly ServerMemberSocialLinkCreated: "ServerMemberSocialLinkCreated";
    readonly ServerMemberSocialLinkUpdated: "ServerMemberSocialLinkUpdated";
    readonly ServerMemberSocialLinkDeleted: "ServerMemberSocialLinkDeleted";
    readonly RoleCreated: "RoleCreated";
    readonly RoleUpdated: "RoleUpdated";
    readonly RoleDeleted: "RoleDeleted";
    readonly ServerWebhookCreated: "ServerWebhookCreated";
    readonly ServerWebhookUpdated: "ServerWebhookUpdated";
    readonly DocCreated: "DocCreated";
    readonly DocUpdated: "DocUpdated";
    readonly DocDeleted: "DocDeleted";
    readonly DocReactionCreated: "DocReactionCreated";
    readonly DocReactionDeleted: "DocReactionDeleted";
    readonly DocCommentCreated: "DocCommentCreated";
    readonly DocCommentUpdated: "DocCommentUpdated";
    readonly DocCommentDeleted: "DocCommentDeleted";
    readonly DocCommentReactionCreated: "DocCommentReactionCreated";
    readonly DocCommentReactionDeleted: "DocCommentReactionDeleted";
    readonly CalendarEventCreated: "CalendarEventCreated";
    readonly CalendarEventUpdated: "CalendarEventUpdated";
    readonly CalendarEventDeleted: "CalendarEventDeleted";
    readonly CalendarEventRsvpUpdated: "CalendarEventRsvpUpdated";
    readonly CalendarEventRsvpDeleted: "CalendarEventRsvpDeleted";
    readonly CalendarEventRsvpManyUpdated: "CalendarEventRsvpManyUpdated";
    readonly CalendarEventReactionCreated: "CalendarEventReactionCreated";
    readonly CalendarEventReactionDeleted: "CalendarEventReactionDeleted";
    readonly CalendarEventCommentCreated: "CalendarEventCommentCreated";
    readonly CalendarEventCommentUpdated: "CalendarEventCommentUpdated";
    readonly CalendarEventCommentDeleted: "CalendarEventCommentDeleted";
    readonly CalendarEventCommentReactionCreated: "CalendarEventCommentReactionCreated";
    readonly CalendarEventCommentReactionDeleted: "CalendarEventCommentReactionDeleted";
    readonly ListItemCreated: "ListItemCreated";
    readonly ListItemUpdated: "ListItemUpdated";
    readonly ListItemDeleted: "ListItemDeleted";
    readonly ListItemCompleted: "ListItemCompleted";
    readonly ListItemUncompleted: "ListItemUncompleted";
    readonly CategoryCreated: "CategoryCreated";
    readonly CategoryUpdated: "CategoryUpdated";
    readonly CategoryDeleted: "CategoryDeleted";
};
export type GATEWAY_EVENTS = typeof GatewayEvents;
export interface GatewayStructure {
    op: GatewayOPCodes;
    d?: object;
    s?: string;
    t?: string;
}
export interface GatewayWelcome {
    op: GatewayOPCodes.Welcome;
    d: GatewayWelcomeData;
}
export interface GatewayWelcomeData {
    lastMessageId: string;
    user: {
        id: string;
        botId: string;
        name: string;
        createdAt: string;
        createdBy: string;
    };
    heartbeatIntervalMs: number;
}
export interface GatewayResume {
    op: GatewayOPCodes.Welcome;
    d: GatewayResumeData;
}
export interface GatewayResumeData {
    s: string;
}
export declare enum GatewayOPCodes {
    Welcome = 1,
    Event = 0,
    Resume = 2,
    Failure = 8,
    Success = 9
}
export type Perm = OpenAPI.paths;
export declare enum Permissions {
    CanUpdateServer = "CanUpdateServer",
    CanManageRoles = "CanManageRoles",
    CanInviteMembers = "CanInviteMembers",
    CanKickMembers = "CanKickMember",
    CanManageGroups = "CanManageGroups",
    CanManageChannels = "CanManageChannels",
    CanManageWebhooks = "CanManageWebhooks",
    CanMentionEveryone = "CanMentionEveryone",
    CanModerateChannels = "CanModerateChannels",
    CanBypassSlowMode = "CanBypassSlowMode",
    CanReadApplications = "CanReadApplications",
    CanApproveApplications = "CanApproveApplications",
    CanEditApplicationForm = "CanEditApplicationForm",
    CanIndicateLfmInterest = "CanIndicateLfmInterest",
    CanModifyLfmStatus = "CanModifyLfmStatus",
    CanReadAnnouncements = "CanReadAnnouncements",
    CanCreateAnnouncements = "CanCreateAnnouncements",
    CanManageAnnouncements = "CanManageAnnouncements",
    CanReadChats = "CanReadChats",
    CanCreateChats = "CanCreateChats",
    CanUploadChatMedia = "CanUploadChatMedia",
    CanCreateThreads = "CanCreateThreads",
    CanCreateThreadMessages = "CanCreateThreadMessages",
    CanCreatePrivateMessages = "CanCreatePrivateMessages",
    CanManageChats = "CanManageChats",
    CanManageThreads = "CanManageThreads",
    CanReadEvents = "CanReadEvents",
    CanEditEvents = "CanEditEvents",
    CanDeleteEvents = "CanDeleteEvents",
    CanEditEventRsvps = "CanEditEventRsvps",
    CanReadForums = "CanReadForums",
    CanCreateTopics = "CanCreateTopics",
    CanCreateTopicReplies = "CanCreateTopicReplies",
    CanDeleteTopics = "CanDeleteTopics",
    CanStickyTopics = "CanStickyTopics",
    CanLockTopics = "CanLockTopics",
    CanReadDocs = "CanReadDocs",
    CanCreateDocs = "CanCreateDocs",
    CanEditDocs = "CanEditDocs",
    CanDeleteDocs = "CanDeleteDocs",
    CanReadMedia = "CanReadMedia",
    CanAddMedia = "CanAddMedia",
    CanEditMedia = "CanEditMedia",
    CanDeleteMedia = "CanDeleteMedia",
    CanListenVoice = "CanListenVoice",
    CanAddVoice = "CanAddVoice",
    CanManageVoiceGroups = "CanManageVoiceGroups",
    CanAssignVoiceGroup = "CanAssignVoiceGroup",
    CanBroadcastVoice = "CanBroadcastVoice",
    CanDirectVoice = "CanDirectVoice",
    CanPrioritizeVoice = "CanPrioritizeVoice",
    CanUseVoiceActivity = "CanUseVoiceActivity",
    CanMuteMembers = "CanMuteMembers",
    CanDeafenMembers = "CanDeafenMembers",
    CanSendVoiceMessages = "CanSendVoiceMessages",
    CanCreateScrims = "CanCreateScrims",
    CanManageTournaments = "CanManageTournaments",
    CanRegisterForTournaments = "CanRegisterForTournaments",
    CanManageEmotes = "CanManageEmotes",
    CanChangeNickname = "CanChangeNickname",
    CanManageNicknames = "CanManageNicknames",
    CanViewFormResponses = "CanViewFormResponses",
    CanViewPollResponses = "CanViewPollResponses",
    CanReadListItems = "CanReadListItems",
    CanCreateListItems = "CanCreateListItems",
    CanUpdateListItems = "CanUpdateListItems",
    CanDeleteListItems = "CanDeleteListItems",
    CanCompleteListItems = "CanCompleteListItems",
    CanReorderListItems = "CanReorderListItems",
    CanViewBracket = "CanViewBracket",
    CanReportScores = "CanReportScores",
    CanReadSchedules = "CanReadSchedules",
    CanCreateSchedule = "CanCreateSchedule",
    CanDeleteSchedule = "CanDeleteSchedule",
    CanManageBots = "CanManageBots",
    CanManageServerXp = "CanManageServerXp",
    CanReadStreams = "CanReadStreams",
    CanJoinStreamVoice = "CanJoinStreamVoice",
    CanCreateStreams = "CanCreateStreams",
    CanSendStreamMessages = "CanSendStreamMessages",
    CanAddStreamVoice = "CanAddStreamVoice",
    CanUseVoiceActivityInStream = "CanUseVoiceActivityInStream"
}
export declare const CHANNELS: () => string;
export declare const CHANNEL: (channelID: string) => string;
export declare const CHANNEL_ARCHIVE: (channelID: string) => string;
export declare const GUILD: (guildID: string) => string;
export declare const USER: (userID: string) => string;
export declare const USER_SERVERS: (userID: string) => string;
export declare const USER_STATUS: (userID: string) => string;
export declare const CHANNEL_MESSAGES: (channelID: string) => string;
export declare const CHANNEL_MESSAGE: (channelID: string, messageID: string) => string;
export declare const CHANNEL_MESSAGE_PIN: (channelID: string, messageID: string) => string;
export declare const CHANNEL_MESSAGE_EMOTES: (channelID: string, messageID: string) => string;
export declare const CHANNEL_MESSAGE_EMOTE: (channelID: string, messageID: string, emoteID: number) => string;
export declare const CHANNEL_ANNOUNCEMENTS: (channelID: string) => string;
export declare const CHANNEL_ANNOUNCEMENT: (channelID: string, announcementID: string) => string;
export declare const CHANNEL_ANNOUNCEMENT_EMOTES: (channelID: string, announcementID: string) => string;
export declare const CHANNEL_ANNOUNCEMENT_EMOTE: (channelID: string, announcementID: string, emoteID: number) => string;
export declare const CHANNEL_ANNOUNCEMENT_COMMENTS: (channelID: string, announcementID: string) => string;
export declare const CHANNEL_ANNOUNCEMENT_COMMENT: (channelID: string, announcementID: string, commentID: number) => string;
export declare const CHANNEL_ANNOUNCEMENT_COMMENT_EMOTES: (channelID: string, announcementID: string, commentID: number) => string;
export declare const CHANNEL_ANNOUNCEMENT_COMMENT_EMOTE: (channelID: string, announcementID: string, commentID: number, emoteID: number) => string;
export declare const MEMBER_NICKNAME: (guildID: string, memberID: string) => string;
export declare const GUILD_MEMBER: (guildID: string, memberID: string) => string;
export declare const GUILD_MEMBER_PERMISSION: (guildID: string, memberID: string) => string;
export declare const GUILD_MEMBER_XP: (guildID: string, memberID: string) => string;
export declare const GUILD_MEMBER_BULK_XP: (guildID: string) => string;
export declare const GUILD_MEMBERS: (guildID: string) => string;
export declare const GUILD_MEMBER_SOCIALS: (guildID: string, memberID: string, type: string) => string;
export declare const GUILD_CHANNEL_ROLE_PERMISSION: (serverID: string, channelID: string, roleID: number) => string;
export declare const GUILD_CHANNEL_ROLE_PERMISSIONS: (serverID: string, channelID: string) => string;
export declare const GUILD_CHANNEL_USER_PERMISSION: (serverID: string, channelID: string, userID: string) => string;
export declare const GUILD_CHANNEL_USER_PERMISSIONS: (serverID: string, channelID: string) => string;
export declare const GUILD_CATEGORY_USER_PERMISSION: (serverID: string, categoryID: number, userID: string) => string;
export declare const GUILD_CATEGORY_USER_PERMISSIONS: (serverID: string, categoryID: number) => string;
export declare const GUILD_CATEGORY_ROLE_PERMISSION: (serverID: string, categoryID: number, roleID: number) => string;
export declare const GUILD_CATEGORY_ROLE_PERMISSIONS: (serverID: string, categoryID: number) => string;
export declare const GUILD_GROUPS: (guildID: string) => string;
export declare const GUILD_GROUP: (guildID: string, groupID: string) => string;
export declare const GUILD_GROUP_MEMBER: (groupID: string, memberID: string) => string;
export declare const GUILD_GROUP_MEMBERS: (groupID: string) => string;
export declare const GUILD_GROUP_ALTERNATIVE: (groupID: string) => string;
export declare const GUILD_SUBSCRIPTIONS: (guildID: string) => string;
export declare const GUILD_SUBSCRIPTION: (guildID: string, subscriptionID: string) => string;
export declare const GUILD_BAN: (guildID: string, memberID: string) => string;
export declare const GUILD_BANS: (guildID: string) => string;
export declare const GUILD_ROLES: (guildID: string) => string;
export declare const GUILD_ROLE: (guildID: string, roleID: number) => string;
export declare const GUILD_ROLE_UPDATE_PERMISSION: (guildID: string, roleID: number) => string;
export declare const GUILD_MEMBER_ROLE: (guildID: string, memberID: string, roleID: number) => string;
export declare const GUILD_MEMBER_ROLE_XP: (guildID: string, roleID: number) => string;
export declare const GUILD_MEMBER_ROLES: (guildID: string, memberID: string) => string;
export declare const FORUM_TOPICS: (channelID: string) => string;
export declare const FORUM_TOPIC: (channelID: string, topicID: number) => string;
export declare const FORUM_TOPIC_PIN: (channelID: string, topicID: number) => string;
export declare const FORUM_TOPIC_LOCK: (channelID: string, topicID: number) => string;
export declare const FORUM_TOPIC_EMOTE: (channelID: string, topicID: number, emoteID: number) => string;
export declare const FORUM_TOPIC_COMMENTS: (channelID: string, topicID: number) => string;
export declare const FORUM_TOPIC_COMMENT: (channelID: string, topicID: number, commentID: number) => string;
export declare const FORUM_TOPIC_COMMENT_EMOTES: (channelID: string, topicID: number, commentID: number) => string;
export declare const FORUM_TOPIC_COMMENT_EMOTE: (channelID: string, topicID: number, commentID: number, emoteID: number) => string;
export declare const LIST_ITEMS: (channelID: string) => string;
export declare const LIST_ITEM: (channelID: string, itemID: string) => string;
export declare const LIST_ITEM_COMPLETE: (channelID: string, itemID: string) => string;
export declare const CHANNEL_DOCS: (channelID: string) => string;
export declare const CHANNEL_DOC: (channelID: string, docID: number) => string;
export declare const CHANNEL_DOC_EMOTES: (channelID: string, docID: number) => string;
export declare const CHANNEL_DOC_EMOTE: (channelID: string, docID: number, emoteID: number) => string;
export declare const CHANNEL_DOC_COMMENTS: (channelID: string, docID: number) => string;
export declare const CHANNEL_DOC_COMMENT: (channelID: string, docID: number, commentID: number) => string;
export declare const CHANNEL_DOC_COMMENT_EMOTES: (channelID: string, docID: number, commentID: number) => string;
export declare const CHANNEL_DOC_COMMENT_EMOTE: (channelID: string, docID: number, commentID: number, emoteID: number) => string;
export declare const CHANNEL_EVENTS: (channelID: string) => string;
export declare const CHANNEL_EVENT: (channelID: string, eventID: number) => string;
export declare const CHANNEL_EVENT_EMOTES: (channelID: string, eventID: number) => string;
export declare const CHANNEL_EVENT_EMOTE: (channelID: string, eventID: number, emoteID: number) => string;
export declare const CHANNEL_EVENT_RSVP: (channelID: string, eventID: number, memberID: string) => string;
export declare const CHANNEL_EVENT_RSVPS: (channelID: string, eventID: number) => string;
export declare const CHANNEL_EVENT_COMMENTS: (channelID: string, eventID: number) => string;
export declare const CHANNEL_EVENT_COMMENT: (channelID: string, eventID: number, commentID: number) => string;
export declare const CHANNEL_EVENT_COMMENT_EMOTES: (channelID: string, eventID: number, commentID: number) => string;
export declare const CHANNEL_EVENT_COMMENT_EMOTE: (channelID: string, eventID: number, commentID: number, emoteID: number) => string;
export declare const CHANNEL_EVENT_EVENT_SERIES: (channelID: string) => string;
export declare const CHANNEL_EVENT_EVENT_SERIES_ENTITY: (channelID: string, seriesID: string) => string;
export declare const GUILD_WEBHOOKS: (guildID: string) => string;
export declare const GUILD_WEBHOOK: (guildID: string, webhookID: string) => string;
export declare const GUILD_CATEGORY_CREATE: (guildID: string) => string;
export declare const GUILD_CATEGORY: (guildID: string, categoryID: number) => string;
export declare const URL_SIGNATURES: () => string;
//# sourceMappingURL=v1.d.ts.map