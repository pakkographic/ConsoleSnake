import type { APICalendarEvent, APICalendarEventComment, APICalendarEventRSVP, APICalendarEventSeries } from "./Calendars";
import type { APIChannelRolePermission, APIChannelUserPermission, APIGuildChannel } from "./Channels";
import type { APIAnnouncement, APIAnnouncementComment, APIChatMessage } from "./Chat";
import type { APIDoc, APIDocComment } from "./Docs";
import type { APIEmote } from "./Emotes";
import type { APIForumTopic, APIForumTopicComment } from "./Forums";
import type { APIGuild, APIGuildCategory, APIGuildCategoryRolePermission, APIGuildCategoryUserPermission, APIGuildGroup, APIGuildRole } from "./Guilds";
import type { APIListItem } from "./ListItems";
import type { APIGuildMember, APIGuildMemberBan } from "./Members";
import type { APIAnnouncementCommentReaction, APIAnnouncementReaction, APICalendarEventCommentReaction, APICalendarEventReaction, APIChatMessageReaction, APIDocCommentReaction, APIDocReaction, APIForumTopicCommentReaction, APIForumTopicReaction } from "./Reactions";
import type { APISocialLink, APIUserStatus } from "./Users";
import type { APIWebhook } from "./Webhooks";
export interface GatewayEvent_BotServerMembershipCreated {
    server: APIGuild;
    createdBy: string;
}
export interface GatewayEvent_BotServerMembershipDeleted {
    server: APIGuild;
    createdBy: string;
}
export interface GatewayEvent_ChatMessageCreated {
    serverId: string;
    message: APIChatMessage;
}
export interface GatewayEvent_ChatMessageUpdated {
    serverId: string;
    message: APIChatMessage;
}
export interface GatewayEvent_ChatMessageDeleted {
    serverId: string;
    message: {
        id: string;
        serverId?: string;
        channelId: string;
        deletedAt: string;
        isPrivate?: boolean;
    };
}
export interface GatewayEvent_AnnouncementCreated {
    serverId: string;
    announcement: APIAnnouncement;
}
export interface GatewayEvent_AnnouncementUpdated {
    serverId: string;
    announcement: APIAnnouncement;
}
export interface GatewayEvent_AnnouncementDeleted {
    serverId: string;
    announcement: APIAnnouncement;
}
export interface GatewayEvent_AnnouncementCommentCreated {
    serverId: string;
    announcementComment: APIAnnouncementComment;
}
export interface GatewayEvent_AnnouncementCommentUpdated {
    serverId: string;
    announcementComment: APIAnnouncementComment;
}
export interface GatewayEvent_AnnouncementCommentDeleted {
    serverId: string;
    announcementComment: APIAnnouncementComment;
}
export interface GatewayEvent_ServerMemberJoined {
    serverId: string;
    member: APIGuildMember;
    serverMemberCount: number;
}
export interface GatewayEvent_ServerMemberRemoved {
    serverId: string;
    userId: string;
    isKick?: boolean;
    isBan?: boolean;
}
export interface GatewayEvent_ServerMemberBanned {
    serverId: string;
    serverMemberBan: APIGuildMemberBan;
}
export interface GatewayEvent_ServerMemberUnbanned {
    serverId: string;
    serverMemberBan: APIGuildMemberBan;
}
export interface GatewayEvent_ServerMemberUpdated {
    serverId: string;
    userInfo: {
        id: string;
        nickname?: string;
    };
}
export interface GatewayEvent_ServerRolesUpdated {
    serverId: string;
    memberRoleIds: Array<{
        userId: string;
        roleIds: Array<number>;
    }>;
}
export interface GatewayEvent_ServerChannelCreated {
    serverId: string;
    channel: APIGuildChannel;
}
export interface GatewayEvent_ServerChannelUpdated {
    serverId: string;
    channel: APIGuildChannel;
}
export interface GatewayEvent_ServerChannelDeleted {
    serverId: string;
    channel: APIGuildChannel;
}
export interface GatewayEvent_ServerMemberSocialLinkCreated {
    serverId: string;
    socialLink: APISocialLink;
}
export interface GatewayEvent_ServerMemberSocialLinkUpdated {
    serverId: string;
    socialLink: APISocialLink;
}
export interface GatewayEvent_ServerMemberSocialLinkDeleted {
    serverId: string;
    socialLink: APISocialLink;
}
export interface GatewayEvent_ServerWebhookCreated {
    serverId: string;
    webhook: APIWebhook;
}
export interface GatewayEvent_ServerWebhookUpdated {
    serverId: string;
    webhook: APIWebhook;
}
export interface GatewayEvent_DocCreated {
    serverId: string;
    doc: APIDoc;
}
export interface GatewayEvent_DocUpdated {
    serverId: string;
    doc: APIDoc;
}
export interface GatewayEvent_DocDeleted {
    serverId: string;
    doc: APIDoc;
}
export interface GatewayEvent_DocReactionCreated {
    serverId: string;
    reaction: APIDocReaction;
}
export interface GatewayEvent_DocReactionDeleted {
    serverId: string;
    reaction: APIDocReaction;
}
export interface GatewayEvent_DocCommentCreated {
    serverId: string;
    docComment: APIDocComment;
}
export interface GatewayEvent_DocCommentUpdated {
    serverId: string;
    docComment: APIDocComment;
}
export interface GatewayEvent_DocCommentDeleted {
    serverId: string;
    docComment: APIDocComment;
}
export interface GatewayEvent_DocCommentReactionCreated {
    serverId: string;
    reaction: APIDocCommentReaction;
}
export interface GatewayEvent_DocCommentReactionDeleted {
    serverId: string;
    reaction: APIDocCommentReaction;
}
export interface GatewayEvent_CalendarEventSeriesUpdated {
    serverId: string;
    calendarEventSeries: APICalendarEventSeries;
    calendarEventId?: number;
}
export interface GatewayEvent_CalendarEventCreated {
    serverId: string;
    calendarEvent: APICalendarEvent;
}
export interface GatewayEvent_CalendarEventUpdated {
    serverId: string;
    calendarEvent: APICalendarEvent;
}
export interface GatewayEvent_CalendarEventDeleted {
    serverId: string;
    calendarEvent: APICalendarEvent;
}
export interface GatewayEvent_ForumTopicCreated {
    serverId: string;
    forumTopic: APIForumTopic;
}
export interface GatewayEvent_ForumTopicUpdated {
    serverId: string;
    forumTopic: APIForumTopic;
}
export interface GatewayEvent_ForumTopicDeleted {
    serverId: string;
    forumTopic: APIForumTopic;
}
export interface GatewayEvent_ForumTopicPinned {
    serverId: string;
    forumTopic: APIForumTopic;
}
export interface GatewayEvent_ForumTopicUnpinned {
    serverId: string;
    forumTopic: APIForumTopic;
}
export interface GatewayEvent_ForumTopicReactionCreated {
    serverId?: string;
    reaction: APIForumTopicReaction;
}
export interface GatewayEvent_ForumTopicReactionDeleted {
    serverId?: string;
    reaction: APIForumTopicReaction;
}
export interface GatewayEvent_CalendarEventCommentCreated {
    serverId: string;
    calendarEventComment: APICalendarEventComment;
}
export interface GatewayEvent_CalendarEventCommentUpdated {
    serverId: string;
    calendarEventComment: APICalendarEventComment;
}
export interface GatewayEvent_CalendarEventCommentDeleted {
    serverId: string;
    calendarEventComment: APICalendarEventComment;
}
export interface GatewayEvent_ForumTopicCommentReactionCreated {
    serverId?: string;
    reaction: APIForumTopicCommentReaction;
}
export interface GatewayEvent_ForumTopicCommentReactionDeleted {
    serverId?: string;
    reaction: APIForumTopicCommentReaction;
}
export interface GatewayEvent_ForumTopicLocked {
    serverId?: string;
    forumTopic: APIForumTopic;
}
export interface GatewayEvent_ForumTopicUnlocked {
    serverId?: string;
    forumTopic: APIForumTopic;
}
export interface GatewayEvent_ForumTopicCommentCreated {
    serverId: string;
    forumTopicComment: APIForumTopicComment;
}
export interface GatewayEvent_ForumTopicCommentUpdated {
    serverId: string;
    forumTopicComment: APIForumTopicComment;
}
export interface GatewayEvent_ForumTopicCommentDeleted {
    serverId: string;
    forumTopicComment: APIForumTopicComment;
}
export interface GatewayEvent_CalendarEventRsvpUpdated {
    serverId?: string;
    calendarEventRsvp: APICalendarEventRSVP;
}
export interface GatewayEvent_CalendarEventRsvpManyUpdated {
    serverId?: string;
    calendarEventRsvps: Array<APICalendarEventRSVP>;
}
export interface GatewayEvent_CalendarEventRsvpDeleted {
    serverId?: string;
    calendarEventRsvp: APICalendarEventRSVP;
}
export interface GatewayEvent_CalendarEventReactionCreated {
    serverId?: string;
    reaction: APICalendarEventReaction;
}
export interface GatewayEvent_CalendarEventReactionDeleted {
    serverId?: string;
    reaction: APICalendarEventReaction;
}
export interface GatewayEvent_CalendarEventCommentReactionCreated {
    serverId?: string;
    reaction: APICalendarEventCommentReaction;
}
export interface GatewayEvent_CalendarEventCommentReactionDeleted {
    serverId?: string;
    reaction: APICalendarEventCommentReaction;
}
export interface GatewayEvent_ListItemCreated {
    serverId: string;
    listItem: APIListItem;
}
export interface GatewayEvent_ListItemUpdated {
    serverId: string;
    listItem: APIListItem;
}
export interface GatewayEvent_ListItemDeleted {
    serverId: string;
    listItem: APIListItem;
}
export interface GatewayEvent_ListItemCompleted {
    serverId: string;
    listItem: APIListItem;
}
export interface GatewayEvent_ListItemUncompleted {
    serverId: string;
    listItem: APIListItem;
}
export interface GatewayEvent_ChannelMessageReactionCreated {
    serverId?: string;
    reaction: APIChatMessageReaction;
}
export interface GatewayEvent_ChannelMessageReactionDeleted {
    serverId?: string;
    reaction: APIChatMessageReaction;
}
export interface GatewayEvent_ChannelMessageReactionManyDeleted {
    serverId: string;
    channelId: string;
    messageId: string;
    deletedBy: string;
    count: number;
    emote?: APIEmote;
}
export interface GatewayEvent_AnnouncementReactionCreated {
    serverId?: string;
    reaction: APIAnnouncementReaction;
}
export interface GatewayEvent_AnnouncementReactionDeleted {
    serverId?: string;
    reaction: APIAnnouncementReaction;
}
export interface GatewayEvent_AnnouncementCommentReactionCreated {
    serverId?: string;
    reaction: APIAnnouncementCommentReaction;
}
export interface GatewayEvent_AnnouncementCommentReactionDeleted {
    serverId?: string;
    reaction: APIAnnouncementCommentReaction;
}
export interface GatewayEvent_GroupCreated {
    serverId: string;
    group: APIGuildGroup;
}
export interface GatewayEvent_GroupUpdated {
    serverId: string;
    group: APIGuildGroup;
}
export interface GatewayEvent_GroupDeleted {
    serverId: string;
    group: APIGuildGroup;
}
export interface GatewayEvent_UserStatusCreated {
    expiresAt?: string;
    userId: string;
    userStatus: APIUserStatus;
}
export interface GatewayEvent_UserStatusDeleted {
    userId: string;
    userStatus: APIUserStatus;
}
export interface GatewayEvent_RoleCreated {
    serverId: string;
    role: APIGuildRole;
}
export interface GatewayEvent_RoleUpdated {
    serverId: string;
    role: APIGuildRole;
}
export interface GatewayEvent_RoleDeleted {
    serverId: string;
    role: APIGuildRole;
}
export interface GatewayEvent_ChannelArchived {
    serverId: string;
    channel: APIGuildChannel;
}
export interface GatewayEvent_ChannelRestored {
    serverId: string;
    channel: APIGuildChannel;
}
export interface GatewayEvent_CategoryCreated {
    serverId: string;
    category: APIGuildCategory;
}
export interface GatewayEvent_CategoryUpdated {
    serverId: string;
    category: APIGuildCategory;
}
export interface GatewayEvent_CategoryDeleted {
    serverId: string;
    category: APIGuildCategory;
}
export interface GatewayEvent_ChannelMessagePinned {
    serverId: string;
    message: APIChatMessage;
}
export interface GatewayEvent_ChannelMessageUnpinned {
    serverId: string;
    message: APIChatMessage;
}
export interface GatewayEvent_ChannelRolePermissionCreated {
    serverId: string;
    channelRolePermission: APIChannelRolePermission;
}
export interface GatewayEvent_ChannelRolePermissionUpdated {
    serverId: string;
    channelRolePermission: APIChannelRolePermission;
}
export interface GatewayEvent_ChannelRolePermissionDeleted {
    serverId: string;
    channelRolePermission: APIChannelRolePermission;
}
export interface GatewayEvent_ChannelUserPermissionCreated {
    serverId: string;
    channelUserPermission: APIChannelUserPermission;
}
export interface GatewayEvent_ChannelUserPermissionUpdated {
    serverId: string;
    channelUserPermission: APIChannelUserPermission;
}
export interface GatewayEvent_ChannelUserPermissionDeleted {
    serverId: string;
    channelUserPermission: APIChannelUserPermission;
}
export interface GatewayEvent_ChannelCategoryUserPermissionCreated {
    serverId: string;
    channelCategoryUserPermission: APIGuildCategoryUserPermission;
}
export interface GatewayEvent_ChannelCategoryUserPermissionUpdated {
    serverId: string;
    channelCategoryUserPermission: APIGuildCategoryUserPermission;
}
export interface GatewayEvent_ChannelCategoryUserPermissionDeleted {
    serverId: string;
    channelCategoryUserPermission: APIGuildCategoryUserPermission;
}
export interface GatewayEvent_ChannelCategoryRolePermissionCreated {
    serverId: string;
    channelCategoryRolePermission: APIGuildCategoryRolePermission;
}
export interface GatewayEvent_ChannelCategoryRolePermissionUpdated {
    serverId: string;
    channelCategoryRolePermission: APIGuildCategoryRolePermission;
}
export interface GatewayEvent_ChannelCategoryRolePermissionDeleted {
    serverId: string;
    channelCategoryRolePermission: APIGuildCategoryRolePermission;
}
//# sourceMappingURL=Events.d.ts.map