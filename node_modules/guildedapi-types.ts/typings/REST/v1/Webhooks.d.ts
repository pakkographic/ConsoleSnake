import type * as OpenAPI from "../../schemas/v1";
import type { APIEmbedOptions } from "../../payloads";
export type POSTGuildWebhookBody = OpenAPI.operations["WebhookCreate"]["requestBody"]["content"]["application/json"];
export type POSTGuildWebhookResponse = OpenAPI.operations["WebhookCreate"]["responses"]["201"]["content"]["application/json"];
export type GETGuildWebhooksQuery = OpenAPI.operations["WebhookReadMany"]["parameters"]["query"];
export type GETGuildWebhooksResponse = OpenAPI.operations["WebhookReadMany"]["responses"]["200"]["content"]["application/json"];
export type GETGuildWebhookResponse = OpenAPI.operations["WebhookRead"]["responses"]["200"]["content"]["application/json"];
export type PUTGuildWebhookBody = OpenAPI.operations["WebhookUpdate"]["requestBody"]["content"]["application/json"];
export type PUTGuildWebhookResponse = OpenAPI.operations["WebhookUpdate"]["responses"]["200"]["content"]["application/json"];
export interface POSTExecuteWebhookBody {
    content?: string;
    username?: string;
    avatar_url?: string;
    embeds?: Array<APIEmbedOptions>;
}
export interface POSTExecuteWebhookResponse {
    id: string;
    channelId: string;
    content: {
        object: string;
        document: {
            data: {
                profile: {
                    name: string;
                    profilePicture: string;
                };
            };
            nodes: Array<{
                object: string;
                type: string;
                data: object;
                nodes: Array<{
                    object: string;
                    leaves: Array<{
                        object: string;
                        text: string;
                        marks: Array<string>;
                    }>;
                }>;
            }>;
        };
    };
    type: string;
    createdBy: string;
    createdAt: string;
    webhookId: string;
    isOptimistic: boolean;
    isUploadPending: boolean;
}
//# sourceMappingURL=Webhooks.d.ts.map