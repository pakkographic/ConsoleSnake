{"version":3,"sources":["../../../src/lib/chunk.ts"],"names":[],"mappings":";;;;;;AAKO,SAAS,KAAA,CAAS,OAAqB,SAA0B,EAAA;AACvE,EAAI,IAAA,CAAC,MAAM,OAAQ,CAAA,KAAK,GAAS,MAAA,IAAI,UAAU,2BAA2B,CAAA;AAC1E,EAAI,IAAA,CAAC,OAAO,SAAU,CAAA,SAAS,GAAS,MAAA,IAAI,UAAU,+BAA+B,CAAA;AACrF,EAAA,IAAI,SAAY,GAAA,CAAA,EAAS,MAAA,IAAI,WAAW,iCAAiC,CAAA;AACzE,EAAA,MAAM,SAAgB,EAAC;AACvB,EAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,KAAA,CAAM,QAAQ,CAAK,IAAA,SAAA,EAAkB,MAAA,CAAA,IAAA,CAAK,KAAM,CAAA,KAAA,CAAM,CAAG,EAAA,CAAA,GAAI,SAAS,CAAC,CAAA;AAC3F,EAAO,OAAA,MAAA;AACR;AAPgB,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA","file":"chunk.cjs","sourcesContent":["/**\n * Splits up an array into chunks\n * @param array The array to chunk up\n * @param chunkSize The size of each individual chunk\n */\nexport function chunk<T>(array: readonly T[], chunkSize: number): T[][] {\n\tif (!Array.isArray(array)) throw new TypeError('entries must be an array.');\n\tif (!Number.isInteger(chunkSize)) throw new TypeError('chunkSize must be an integer.');\n\tif (chunkSize < 1) throw new RangeError('chunkSize must be 1 or greater.');\n\tconst chunks: T[][] = [];\n\tfor (let i = 0; i < array.length; i += chunkSize) chunks.push(array.slice(i, i + chunkSize));\n\treturn chunks;\n}\n"]}